# Generated by Django 4.2 on 2023-07-27 20:25

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=255, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(max_length=255, null=True)),
                ('last_name', models.CharField(max_length=255, null=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('password', models.CharField(blank=True, max_length=128, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Garden',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, max_length=500)),
                ('size_x', models.IntegerField(blank=True, null=True)),
                ('size_y', models.IntegerField(blank=True, null=True)),
                ('direction', models.CharField(choices=[('north', 'North'), ('south', 'South'), ('east', 'East'), ('west', 'West')], default='north', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Plant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, max_length=500)),
                ('color', models.CharField(blank=True, max_length=100)),
                ('type', models.CharField(choices=[('vegetable', 'Vegetable'), ('fruit', 'Fruit'), ('herb', 'Herb'), ('flower', 'Flower'), ('other', 'Other')], default='vegetable', max_length=100)),
                ('season', models.CharField(choices=[('cool', 'Cool'), ('warm', 'Warm'), ('any', 'Any')], default='any', max_length=100)),
                ('sun', models.CharField(choices=[('full', 'Full'), ('partial', 'Partial'), ('shade', 'Shade')], default='full', max_length=100)),
                ('temp_min', models.IntegerField(blank=True, null=True)),
                ('temp_ideal', models.IntegerField(blank=True, null=True)),
                ('temp_max', models.IntegerField(blank=True, null=True)),
                ('spacing_x_min', models.IntegerField(blank=True, null=True)),
                ('spacing_x_max', models.IntegerField(blank=True, null=True)),
                ('spacing_y_min', models.IntegerField(blank=True, null=True)),
                ('spacing_y_max', models.IntegerField(blank=True, null=True)),
                ('height_min', models.IntegerField(blank=True, null=True)),
                ('height_max', models.IntegerField(blank=True, null=True)),
                ('width_min', models.IntegerField(blank=True, null=True)),
                ('width_max', models.IntegerField(blank=True, null=True)),
                ('depth_min', models.IntegerField(blank=True, null=True)),
                ('depth_max', models.IntegerField(blank=True, null=True)),
                ('germination_min', models.IntegerField(blank=True, null=True)),
                ('germination_max', models.IntegerField(blank=True, null=True)),
                ('harvest_min', models.IntegerField(blank=True, null=True)),
                ('harvest_max', models.IntegerField(blank=True, null=True)),
                ('days_to_transplant_min', models.IntegerField(blank=True, null=True)),
                ('days_to_transplant_max', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True, max_length=500)),
                ('address', models.CharField(blank=True, max_length=30)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('user_plants', models.ManyToManyField(blank=True, to='main_app.plant')),
            ],
        ),
        migrations.CreateModel(
            name='UserPlant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100)),
                ('notes', models.TextField(blank=True, max_length=500)),
                ('date_planted', models.DateField(blank=True, null=True)),
                ('date_transplanted', models.DateField(blank=True, null=True)),
                ('date_harvested', models.DateField(blank=True, null=True)),
                ('garden', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main_app.garden')),
                ('plant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main_app.plant')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main_app.profile')),
            ],
        ),
        migrations.AddField(
            model_name='garden',
            name='profile',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main_app.profile'),
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('street', models.CharField(blank=True, max_length=100, null=True)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('state', models.CharField(blank=True, max_length=2)),
                ('zipcode', models.IntegerField(blank=True)),
                ('profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to='main_app.profile')),
            ],
        ),
    ]
